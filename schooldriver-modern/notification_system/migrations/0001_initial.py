# Generated by Django 4.2.16 on 2025-07-25 01:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('students', '0004_medicalinformation_authorizedpickupperson'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('category', models.CharField(choices=[('grade', 'Grade Related'), ('attendance', 'Attendance'), ('assignment', 'Assignment'), ('emergency', 'Emergency'), ('announcement', 'Announcement'), ('message', 'Message'), ('reminder', 'Reminder'), ('conference', 'Conference')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('emergency', 'Emergency')], default='normal', max_length=20)),
                ('delivery_method', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('in_app', 'In-App Notification')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('read', 'Read')], default='pending', max_length=20)),
                ('metadata', models.JSONField(default=dict, help_text='Additional data for the notification')),
                ('related_object_type', models.CharField(blank=True, max_length=50, null=True)),
                ('related_object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('scheduled_for', models.DateTimeField(blank=True, help_text='Schedule for future delivery', null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL)),
                ('related_student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.student')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('grade', 'Grade Related'), ('attendance', 'Attendance'), ('assignment', 'Assignment'), ('emergency', 'Emergency'), ('announcement', 'Announcement'), ('message', 'Message'), ('reminder', 'Reminder'), ('conference', 'Conference')], max_length=20)),
                ('email_subject', models.CharField(max_length=200)),
                ('email_body', models.TextField()),
                ('email_html_body', models.TextField(blank=True, null=True)),
                ('sms_body', models.TextField(help_text='Keep under 160 characters', max_length=160)),
                ('push_title', models.CharField(max_length=100)),
                ('push_body', models.CharField(max_length=200)),
                ('variables', models.JSONField(default=list, help_text='List of variables used in templates')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Summary'), ('disabled', 'Disabled')], default='immediate', max_length=20)),
                ('grade_delivery', models.CharField(choices=[('email', 'Email Only'), ('sms', 'SMS Only'), ('push', 'Push Notification Only'), ('email_sms', 'Email + SMS'), ('email_push', 'Email + Push'), ('sms_push', 'SMS + Push'), ('all', 'All Methods')], default='email_push', max_length=20)),
                ('attendance_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Summary'), ('disabled', 'Disabled')], default='immediate', max_length=20)),
                ('attendance_delivery', models.CharField(choices=[('email', 'Email Only'), ('sms', 'SMS Only'), ('push', 'Push Notification Only'), ('email_sms', 'Email + SMS'), ('email_push', 'Email + Push'), ('sms_push', 'SMS + Push'), ('all', 'All Methods')], default='email_sms', max_length=20)),
                ('assignment_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Summary'), ('disabled', 'Disabled')], default='daily', max_length=20)),
                ('assignment_delivery', models.CharField(choices=[('email', 'Email Only'), ('sms', 'SMS Only'), ('push', 'Push Notification Only'), ('email_sms', 'Email + SMS'), ('email_push', 'Email + Push'), ('sms_push', 'SMS + Push'), ('all', 'All Methods')], default='email', max_length=20)),
                ('emergency_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Summary'), ('disabled', 'Disabled')], default='immediate', max_length=20)),
                ('emergency_delivery', models.CharField(choices=[('email', 'Email Only'), ('sms', 'SMS Only'), ('push', 'Push Notification Only'), ('email_sms', 'Email + SMS'), ('email_push', 'Email + Push'), ('sms_push', 'SMS + Push'), ('all', 'All Methods')], default='all', max_length=20)),
                ('announcement_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Summary'), ('disabled', 'Disabled')], default='daily', max_length=20)),
                ('announcement_delivery', models.CharField(choices=[('email', 'Email Only'), ('sms', 'SMS Only'), ('push', 'Push Notification Only'), ('email_sms', 'Email + SMS'), ('email_push', 'Email + Push'), ('sms_push', 'SMS + Push'), ('all', 'All Methods')], default='email', max_length=20)),
                ('message_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Summary'), ('disabled', 'Disabled')], default='immediate', max_length=20)),
                ('message_delivery', models.CharField(choices=[('email', 'Email Only'), ('sms', 'SMS Only'), ('push', 'Push Notification Only'), ('email_sms', 'Email + SMS'), ('email_push', 'Email + Push'), ('sms_push', 'SMS + Push'), ('all', 'All Methods')], default='email_push', max_length=20)),
                ('phone_number', models.CharField(blank=True, help_text='Format: +1234567890', max_length=20, null=True)),
                ('push_token', models.TextField(blank=True, help_text='Device push notification token', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_prefs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50)),
                ('details', models.TextField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, max_length=200, null=True)),
                ('external_response', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notification_system.notification')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NotificationBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('recipient_query', models.TextField(help_text='JSON representation of recipient query')),
                ('estimated_recipients', models.PositiveIntegerField(default=0)),
                ('actual_recipients', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('sending', 'Sending'), ('completed', 'Completed'), ('failed', 'Failed')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('scheduled_for', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notification_system.notificationtemplate')),
            ],
        ),
        migrations.CreateModel(
            name='ConferenceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('status', models.CharField(choices=[('available', 'Available'), ('booked', 'Booked'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled')], default='available', max_length=20)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('virtual_meeting_link', models.URLField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('booked_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conference_bookings', to=settings.AUTH_USER_MODEL)),
                ('rescheduled_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notification_system.conferenceschedule')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conferences', to='students.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conference_slots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status'], name='notificatio_recipie_b9d729_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['category', 'priority'], name='notificatio_categor_13525c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_48006e_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_for'], name='notificatio_schedul_aee2de_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='conferenceschedule',
            unique_together={('teacher', 'date', 'start_time')},
        ),
    ]
