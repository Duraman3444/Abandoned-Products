# Generated by Django 4.2.16 on 2025-07-25 01:29

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('students', '0004_medicalinformation_authorizedpickupperson'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicGoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('goal_type', models.CharField(choices=[('gpa', 'GPA Target'), ('grade', 'Grade Improvement'), ('subject', 'Subject Mastery'), ('behavior', 'Behavior Goal'), ('attendance', 'Attendance Goal')], max_length=50)),
                ('target_value', models.FloatField()),
                ('current_value', models.FloatField(default=0)),
                ('target_date', models.DateField()),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('active', 'Active'), ('achieved', 'Achieved'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('is_shared', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_goals', to='students.student')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='AchievementBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('icon', models.CharField(max_length=50)),
                ('category', models.CharField(choices=[('academic', 'Academic'), ('behavior', 'Behavior'), ('participation', 'Participation'), ('improvement', 'Improvement'), ('leadership', 'Leadership')], max_length=50)),
                ('criteria', models.JSONField()),
                ('points', models.IntegerField(default=10)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudyRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('recommendation_type', models.CharField(choices=[('improvement', 'Improvement Area'), ('strength', 'Strength Building'), ('resource', 'Resource Recommendation'), ('strategy', 'Study Strategy')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('resources', models.JSONField(default=list)),
                ('priority', models.CharField(choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', max_length=20)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('parent_acknowledged', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_recommendations', to='students.student')),
            ],
            options={
                'ordering': ['-priority', '-created_date'],
            },
        ),
        migrations.CreateModel(
            name='ParentEngagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Portal Login'), ('grade_view', 'Grade Check'), ('message_read', 'Message Read'), ('message_sent', 'Message Sent'), ('document_view', 'Document View'), ('goal_set', 'Goal Setting'), ('badge_view', 'Badge View'), ('analytics_view', 'Analytics View')], max_length=50)),
                ('activity_data', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('session_duration', models.DurationField(blank=True, null=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_metrics', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_engagement', to='students.student')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='GoalProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_value', models.FloatField()),
                ('notes', models.TextField(blank=True)),
                ('recorded_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='student_analytics.academicgoal')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-recorded_date'],
            },
        ),
        migrations.CreateModel(
            name='ClassAverage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('grade_level', models.IntegerField()),
                ('period', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('class_average', models.FloatField()),
                ('grade_level_average', models.FloatField()),
                ('school_average', models.FloatField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('subject', 'grade_level', 'period', 'year')},
            },
        ),
        migrations.CreateModel(
            name='StudentBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('shared_with_family', models.BooleanField(default=False)),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student_analytics.achievementbadge')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_badges', to='students.student')),
            ],
            options={
                'ordering': ['-earned_date'],
                'unique_together': {('student', 'badge')},
            },
        ),
        migrations.CreateModel(
            name='EngagementSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_logins', models.IntegerField(default=0)),
                ('total_time_spent', models.DurationField(default=datetime.timedelta(0))),
                ('grade_checks', models.IntegerField(default=0)),
                ('messages_read', models.IntegerField(default=0)),
                ('documents_viewed', models.IntegerField(default=0)),
                ('engagement_score', models.FloatField(default=0)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_summaries', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
            options={
                'ordering': ['-period_start'],
                'unique_together': {('parent', 'student', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='AcademicProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100)),
                ('grade_value', models.FloatField()),
                ('period', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('recorded_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='students.student')),
            ],
            options={
                'ordering': ['-year', '-recorded_date'],
                'unique_together': {('student', 'subject', 'period', 'year')},
            },
        ),
    ]
