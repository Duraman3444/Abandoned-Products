# Generated by Django 4.2.16 on 2025-07-23 22:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('students', '0002_alter_emergencycontact_city_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('academics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbsenceReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_excused', models.BooleanField(default=False)),
                ('requires_documentation', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CurriculumStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('subject_area', models.CharField(max_length=100)),
                ('grade_level', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['subject_area', 'grade_level', 'code'],
            },
        ),
        migrations.CreateModel(
            name='StudentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('is_late', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.AddField(
            model_name='announcement',
            name='email_sent_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='announcement',
            name='priority',
            field=models.CharField(choices=[('LOW', 'Low Priority'), ('NORMAL', 'Normal Priority'), ('HIGH', 'High Priority'), ('URGENT', 'Urgent - Immediate Attention')], default='NORMAL', max_length=10),
        ),
        migrations.AddField(
            model_name='announcement',
            name='push_sent_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='announcement',
            name='send_email_notification',
            field=models.BooleanField(default=False, help_text='Send email notifications to targeted audience'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='send_push_notification',
            field=models.BooleanField(default=True, help_text='Send push notifications to targeted audience'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='send_sms_notification',
            field=models.BooleanField(default=False, help_text='Send SMS notifications to targeted audience'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='sms_sent_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='announcement',
            name='target_classes',
            field=models.ManyToManyField(blank=True, help_text="Select specific classes (used when audience is 'Specific Classes')", to='academics.course'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='target_grades',
            field=models.CharField(blank=True, help_text="Comma-separated grade levels (e.g., '9,10,11' for grades 9-11)", max_length=50),
        ),
        migrations.AddField(
            model_name='assignment',
            name='allow_late_submission',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='assignment',
            name='due_time',
            field=models.TimeField(blank=True, help_text='Optional due time', null=True),
        ),
        migrations.AddField(
            model_name='assignment',
            name='estimated_duration',
            field=models.PositiveIntegerField(blank=True, help_text='Estimated time in minutes', null=True),
        ),
        migrations.AddField(
            model_name='assignment',
            name='instructions',
            field=models.TextField(blank=True, help_text='Detailed instructions for students'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='late_penalty',
            field=models.DecimalField(decimal_places=2, default=0.0, help_text='Penalty percentage per day late', max_digits=5),
        ),
        migrations.AddField(
            model_name='assignment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='attendance',
            name='minutes_late',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='attendance',
            name='parent_notified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='attendance',
            name='parent_notified_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='attendance',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='grade',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='announcement',
            name='audience',
            field=models.CharField(choices=[('ALL', 'All Users'), ('STUDENTS', 'Students Only'), ('PARENTS', 'Parents Only'), ('TEACHERS', 'Teachers Only'), ('ADMIN', 'Administration Only'), ('STAFF', 'All Staff'), ('SPECIFIC_CLASSES', 'Specific Classes'), ('SPECIFIC_GRADES', 'Specific Grades')], default='ALL', max_length=20),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='status',
            field=models.CharField(choices=[('P', 'Present'), ('A', 'Absent'), ('T', 'Tardy'), ('E', 'Excused Absent'), ('L', 'Late Excused')], default='P', max_length=1),
        ),
        migrations.CreateModel(
            name='SubmissionAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='submissions/%Y/%m/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('content_type', models.CharField(max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='academics.studentsubmission')),
            ],
            options={
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='studentsubmission',
            name='assignment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='academics.assignment'),
        ),
        migrations.AddField(
            model_name='studentsubmission',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='students.student'),
        ),
        migrations.CreateModel(
            name='StudentProgressNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('ACADEMIC', 'Academic Progress'), ('BEHAVIORAL', 'Behavioral Note'), ('ATTENDANCE', 'Attendance Concern'), ('ACHIEVEMENT', 'Achievement/Recognition'), ('CONCERN', 'General Concern'), ('PARENT_CONFERENCE', 'Parent Conference Request')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('visibility', models.CharField(choices=[('PARENTS_ONLY', 'Parents Only'), ('STAFF_ONLY', 'Staff Only'), ('PARENTS_AND_STAFF', 'Parents and Staff'), ('ADMIN_ONLY', 'Administration Only')], default='PARENTS_AND_STAFF', max_length=20)),
                ('requires_follow_up', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('follow_up_completed', models.BooleanField(default=False)),
                ('follow_up_notes', models.TextField(blank=True)),
                ('parent_notified', models.BooleanField(default=False)),
                ('parent_notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('parent_response', models.TextField(blank=True)),
                ('parent_responded_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, help_text='Course this note relates to (optional)', null=True, on_delete=django.db.models.deletion.CASCADE, to='academics.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_notes', to='students.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='written_progress_notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LessonPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('lesson_type', models.CharField(choices=[('lecture', 'Lecture'), ('discussion', 'Discussion'), ('lab', 'Laboratory'), ('project', 'Project'), ('assessment', 'Assessment'), ('review', 'Review'), ('presentation', 'Presentation')], default='lecture', max_length=20)),
                ('objectives', models.TextField(help_text='Learning objectives for this lesson')),
                ('content', models.TextField(help_text='Lesson content and activities')),
                ('materials', models.TextField(blank=True, help_text='Required materials and resources')),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_plans', to='academics.coursesection')),
            ],
            options={
                'ordering': ['date', 'title'],
            },
        ),
        migrations.CreateModel(
            name='GradeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_points_earned', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('old_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('old_letter_grade', models.CharField(blank=True, max_length=2)),
                ('new_points_earned', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('new_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('new_letter_grade', models.CharField(blank=True, max_length=2)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('reason', models.TextField(blank=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='academics.grade')),
            ],
            options={
                'verbose_name_plural': 'Grade Histories',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('max_points', models.DecimalField(decimal_places=2, default=100.0, max_digits=6)),
                ('weight', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('instructions', models.TextField(blank=True)),
                ('estimated_duration', models.PositiveIntegerField(blank=True, help_text='Duration in minutes', null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academics.assignmentcategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='assignments/%Y/%m/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('content_type', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='academics.assignment')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='assignment',
            name='lesson_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assignments', to='academics.lessonplan'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='standards',
            field=models.ManyToManyField(blank=True, to='academics.curriculumstandard'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='academics.assignmenttemplate'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='absence_reason',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='academics.absencereason'),
        ),
        migrations.AlterUniqueTogether(
            name='studentsubmission',
            unique_together={('assignment', 'student')},
        ),
    ]
