# Generated by Django 4.2.16 on 2025-07-24 22:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('students', '0003_student_family_access_users_parentverificationcode'),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalInformation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('allergies', models.TextField(blank=True, help_text='List all known allergies and severity')),
                ('medical_conditions', models.TextField(blank=True, help_text='Ongoing medical conditions (asthma, diabetes, etc.)')),
                ('medications', models.TextField(blank=True, help_text='Current medications and dosages')),
                ('primary_physician', models.CharField(blank=True, max_length=200)),
                ('primary_physician_phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number (e.g., (555) 123-4567 or 555-123-4567)', regex='^\\+?1?[-.\\s]?\\(?[0-9]{3}\\)?[-.\\s]?[0-9]{3}[-.\\s]?[0-9]{4}$')])),
                ('preferred_hospital', models.CharField(blank=True, max_length=200)),
                ('insurance_provider', models.CharField(blank=True, max_length=200)),
                ('dietary_restrictions', models.TextField(blank=True, help_text='Food allergies, dietary restrictions, or special meal requirements')),
                ('physical_limitations', models.TextField(blank=True, help_text='Physical limitations or accommodations needed')),
                ('emergency_action_plan', models.TextField(blank=True, help_text='Specific emergency procedures for this student')),
                ('can_self_medicate', models.BooleanField(default=False, help_text='Student is authorized to carry and self-administer medication')),
                ('nurse_notes', models.TextField(blank=True, help_text='Private notes for school nurse (not visible to parents)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by', models.ForeignKey(blank=True, help_text='User who last updated this information', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='medical_information', to='students.student')),
            ],
            options={
                'verbose_name': 'Medical Information',
                'verbose_name_plural': 'Medical Information',
            },
        ),
        migrations.CreateModel(
            name='AuthorizedPickupPerson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Name can only contain letters, spaces, hyphens, apostrophes, and periods', regex="^[a-zA-Z\\s\\-\\'\\.]+$"), django.core.validators.MinLengthValidator(1, message='First name is required')])),
                ('last_name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Name can only contain letters, spaces, hyphens, apostrophes, and periods', regex="^[a-zA-Z\\s\\-\\'\\.]+$"), django.core.validators.MinLengthValidator(1, message='Last name is required')])),
                ('relationship', models.CharField(choices=[('parent', 'Parent'), ('guardian', 'Legal Guardian'), ('grandparent', 'Grandparent'), ('sibling', 'Sibling'), ('family_friend', 'Family Friend'), ('childcare', 'Childcare Provider'), ('other', 'Other')], max_length=20)),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number (e.g., (555) 123-4567 or 555-123-4567)', regex='^\\+?1?[-.\\s]?\\(?[0-9]{3}\\)?[-.\\s]?[0-9]{3}[-.\\s]?[0-9]{4}$')])),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('id_requirements', models.TextField(blank=True, help_text='Special ID requirements or notes for pickup verification')),
                ('is_emergency_contact', models.BooleanField(default=False, help_text='Can this person be contacted in emergencies?')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorized_pickup_persons', to='students.student')),
            ],
            options={
                'verbose_name': 'Authorized Pickup Person',
                'verbose_name_plural': 'Authorized Pickup Persons',
                'ordering': ['last_name', 'first_name'],
            },
        ),
    ]
