# Generated by Django 4.2.16 on 2025-07-21 17:40

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EmergencyContact",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "relationship",
                    models.CharField(
                        choices=[
                            ("mother", "Mother"),
                            ("father", "Father"),
                            ("guardian", "Legal Guardian"),
                            ("grandparent", "Grandparent"),
                            ("other", "Other Relative"),
                            ("emergency", "Emergency Contact"),
                        ],
                        max_length=20,
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("phone_primary", models.CharField(blank=True, max_length=20)),
                ("phone_secondary", models.CharField(blank=True, max_length=20)),
                ("street", models.CharField(blank=True, max_length=200)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=50)),
                ("zip_code", models.CharField(blank=True, max_length=10)),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Primary contact for school communications",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="GradeLevel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "order",
                    models.PositiveIntegerField(
                        help_text="1=Kindergarten, 2=1st grade, etc."
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="SchoolYear",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g. 2024-2025", max_length=50, unique=True
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("is_active", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "student_id",
                    models.CharField(
                        blank=True,
                        help_text="School-specific student ID number",
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("middle_name", models.CharField(blank=True, max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                (
                    "preferred_name",
                    models.CharField(
                        blank=True,
                        help_text="Name student prefers to be called",
                        max_length=100,
                    ),
                ),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Male"),
                            ("F", "Female"),
                            ("O", "Other"),
                            ("N", "Prefer not to say"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        help_text="Student photo for ID purposes",
                        null=True,
                        upload_to="student_photos/",
                    ),
                ),
                ("graduation_year", models.IntegerField(blank=True, null=True)),
                ("enrollment_date", models.DateField()),
                ("graduation_date", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("withdrawal_date", models.DateField(blank=True, null=True)),
                ("withdrawal_reason", models.TextField(blank=True)),
                (
                    "special_needs",
                    models.TextField(
                        blank=True, help_text="IEP, 504 plan, allergies, medical needs"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Administrative notes"),
                ),
                (
                    "primary_contact_name",
                    models.CharField(blank=True, editable=False, max_length=200),
                ),
                (
                    "primary_contact_email",
                    models.EmailField(blank=True, editable=False, max_length=254),
                ),
                (
                    "primary_contact_phone",
                    models.CharField(blank=True, editable=False, max_length=20),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "emergency_contacts",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Parents, guardians, and emergency contacts",
                        to="students.emergencycontact",
                    ),
                ),
                (
                    "grade_level",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="students.gradelevel",
                    ),
                ),
            ],
            options={
                "ordering": ["last_name", "first_name"],
                "indexes": [
                    models.Index(
                        fields=["student_id"], name="students_st_student_e7126a_idx"
                    ),
                    models.Index(
                        fields=["is_active", "grade_level"],
                        name="students_st_is_acti_392685_idx",
                    ),
                    models.Index(
                        fields=["graduation_year"],
                        name="students_st_graduat_e520fc_idx",
                    ),
                ],
            },
        ),
    ]
